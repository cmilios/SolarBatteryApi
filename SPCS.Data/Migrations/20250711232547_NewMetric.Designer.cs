// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPCS.Data;

#nullable disable

namespace SPCS.Data.Migrations
{
    [DbContext(typeof(SPCSContext))]
    [Migration("20250711232547_NewMetric")]
    partial class NewMetric
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SPCS.Concurrency.Models.ConcurrencyCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConcurrencyMetric")
                        .HasPrecision(18, 10)
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("NeedCoverage")
                        .HasPrecision(18, 10)
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.ToTable("ConcurrencyCalculations");
                });

            modelBuilder.Entity("SPCS.Concurrency.Models.PowerTimestamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConcurrencyCalculationId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConcurrencyCalculationId");

                    b.ToTable("PowerTimestamp");
                });

            modelBuilder.Entity("SPCS.Concurrency.Models.PowerTimestamp", b =>
                {
                    b.HasOne("SPCS.Concurrency.Models.ConcurrencyCalculation", "ConcurrencyCalculation")
                        .WithMany("PowerTimestamps")
                        .HasForeignKey("ConcurrencyCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcurrencyCalculation");
                });

            modelBuilder.Entity("SPCS.Concurrency.Models.ConcurrencyCalculation", b =>
                {
                    b.Navigation("PowerTimestamps");
                });
#pragma warning restore 612, 618
        }
    }
}
